name: Laravel CI with PostgreSQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    # Define services needed for the job, in this case, PostgreSQL
    services:
      postgres:
        image: postgres:14 # يمكنك استخدام إصدار أحدث مثل postgres:15 أو postgres:16
        env:
          POSTGRES_DB: test_db # اسم قاعدة البيانات للاختبارات
          POSTGRES_USER: test_user # اسم المستخدم لقاعدة البيانات
          POSTGRES_PASSWORD: password # كلمة المرور لقاعدة البيانات
        ports:
          - 5432:5432 # ربط منفذ PostgreSQL داخل الحاوية بمنفذ على المضيف
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2 # استخدم v2 للحصول على أحدث الميزات والتوافق
      with:
        php-version: '8.3' # متوافق مع Laravel 12
        extensions: pgsql, pdo_pgsql # إضافة امتدادات PostgreSQL لـ PHP
        coverage: none # أو xdebug / pcov إذا كنت تستخدم تغطية الكود

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install PHP Dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    # Add Node.js and Vite steps
    - name: Setup Node.js
      uses: actions/setup-node@v4 # استخدم v4 للحصول على أحدث الميزات
      with:
        node-version: 'latest' # تثبيت أحدث إصدار من Node.js

    - name: Install Node.js Dependencies
      run: npm install # تثبيت حزم Node.js (بما في ذلك Vite)

    - name: Run Vite Development Build
      run: npm run dev # تشغيل Vite في وضع التطوير (dev server)

    - name: Wait for PostgreSQL to be ready
      # هذا الأمر ينتظر حتى تكون خدمة PostgreSQL جاهزة للاستقبال الاتصالات
      run: |
        for i in $(seq 1 10); do
          nc -z localhost 5432 && echo "PostgreSQL is ready" && break
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Run Migrations
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost # اسم الخدمة أو localhost إذا كانت الخدمة تعمل على نفس المضيف
        DB_PORT: 5432
        DB_DATABASE: test_db
        DB_USERNAME: test_user
        DB_PASSWORD: password
      run: php artisan migrate --force # تشغيل الـ migrations لإنشاء الجداول في PostgreSQL

    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: test_db
        DB_USERNAME: test_user
        DB_PASSWORD: password
      run: php artisan test
